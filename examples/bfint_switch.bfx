include "std.bfx"

const MAX_SIZE = 250;

struct BF
{
    [MAX_SIZE] tape;
    [MAX_SIZE] code;
    [MAX_SIZE] jmp_stack;

    tape_pointer, stack_pointer;
};

global [struct BF] bf;

function main()
{
    let programSize = load();
    run(programSize);
}

function init()
{
    bf.tape = 0;
    bf.tape_pointer = 0;
}

function count = load()
{
    let count = 0;
    let c;
    while ((c = scanc()) != '\n' && count < MAX_SIZE)
        bf.code[count++] = c;
}

function run(programSize)
{
    let i = 0;
    while (i < programSize)
    {
        switch (bf.code[i])
        {
            case '>':
            {
                ++bf.tape_pointer;
            }
            case '<':
            {
                --bf.tape_pointer;
            }
            case '[':
            {
                if (bf.tape[bf.tape_pointer])
                    bf.jmp_stack[bf.stack_pointer++] = i;
                else
                    skipToClosingBracket(i);
            }
            case ']':
            {
                if (bf.tape[bf.tape_pointer])
                    i = bf.jmp_stack[bf.stack_pointer - 1];
                else
                    --bf.stack_pointer;
            }
            case '+':
            {
                ++bf.tape[bf.tape_pointer];
            }
            case '-':
            {
                --bf.tape[bf.tape_pointer];
            }
            case '.':
            {
                printc(bf.tape[bf.tape_pointer]);
            }
            case ',':
            {
                bf.tape[bf.tape_pointer] = scanc(); 
            }
        }
        ++i;
    }
}
        
function skipToClosingBracket(&idx)
{
    let count = 1;
    while (count > 0)
    {
        let op = bf.code[++idx];
        if (op == '[')
            ++count;
        else if (op == ']')
            --count;
    }
}
